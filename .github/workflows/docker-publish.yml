name: Docker Deploy

on:
  push:
    tags: [ '*.*.*' ]

env:
  IMAGE_NAME: smart-ag-server-new

jobs:
  set-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - id: set-matrix
        run: |
          JSON=$(cat .github/workflows/repo-setting.json | tr '\n' ' ' | sed 's/ //g')
          echo "::set-output name=matrix::$JSON"

  build:
    runs-on: ubuntu-latest
    needs: [ set-matrix ]
    strategy:
      matrix: ${{fromJSON(needs.set-matrix.outputs.matrix)}}

    env:
      id: ${{ secrets[matrix.id] }}
      token: ${{ secrets[matrix.token] }}

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Git Tag
        id: git_tag
        run: |
          tag=$(echo ${{ github.ref }} | rev | cut -d/ -f1 | rev)
          echo "::set-output name=tag::$tag"

      - name: Log into registry ${{ matrix.name }}
        uses: docker/login-action@v1
        with:
          registry: ${{ matrix.register }}
          username: ${{ env.id }}
          password: ${{ env.token }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Build and Push ${{ matrix.name }}
        run: |
          make buildx REPO=${{ matrix.push_link }} VERSION=${{ steps.git_tag.outputs.tag }}
          make buildx REPO=${{ matrix.push_link }} VERSION=latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [ build ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }}
          body: |
            Changes Release ${{ github.ref }}
            - First Change
            - Second Change
          draft: false
          prerelease: false